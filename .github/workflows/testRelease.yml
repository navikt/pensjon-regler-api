name: Manual Release (Github Package Registry)

on: workflow_dispatch

jobs:
  release:
    permissions:
      actions: read
      checks: read
      contents: read
      deployments: write
      packages: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Create Release and Generate Release Notes
      - name: Create Release with Release Notes
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref_name }}  # Tag name from workflow dispatch
          release_name: Release ${{ github.ref_name }}
          generate_release_notes: false  # We will generate custom release notes

      # Get the latest release tag
      - name: Get latest release tag
        id: get_latest_release
        run: |
          LATEST_TAG=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest" \
            | jq -r .tag_name)
          echo "::set-output name=latest_tag::$LATEST_TAG"  # Save the latest tag for use

      # Get commits since the latest release tag
      - name: Get commits since last release
        id: fetch_commits
        run: |
          COMMITS=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/compare/${{ steps.get_latest_release.outputs.latest_tag }}...${{ github.ref_name }}" \
            | jq -r '.commits[].commit.message' | sed 's/^/* /')  # List commit messages
          echo "::set-output name=commits::$COMMITS"  # Output commits

      # Format and send the Slack message with release notes
      - name: Notify Slack about new release
        run: |
          SLACK_MESSAGE="*New Release: ${GITHUB_REF#refs/tags/}*\n\nChanges:\n${{ steps.fetch_commits.outputs.commits }}"
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text": "'"$SLACK_MESSAGE"'"}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}  # Use the Slack webhook secret
