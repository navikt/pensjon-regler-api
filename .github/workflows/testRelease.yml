name: Fetch Latest Release Notes

on: workflow_dispatch

jobs:
  fetch_release_notes:
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Get latest release notes
        id: fetch_release_notes
        run: |
          # Fetch the latest release information
          RELEASE=$(curl -s \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/latest")

          # Extract release notes and tag name
          RELEASE_NOTES=$(echo "$RELEASE" | jq -r '.body' | sed ':a;N;$!ba;s/\n/\\n/g')
          TAG_NAME=$(echo "$RELEASE" | jq -r '.tag_name')

          # Output the release notes and tag name as GitHub environment variables
          echo "RELEASE_NOTES=$RELEASE_NOTES" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Output release notes
        run: |
          echo "Latest Release Notes:"
          echo "${{ env.RELEASE_NOTES }}"

      - name: Notify Slack about latest release
        run: |
          # Replace '\n' with actual newlines in the release notes
          RELEASE_NOTES=$(echo "${{ env.RELEASE_NOTES }}" | sed 's/\\n/\n/g')

          # Format the Slack message with the tag name and hyperlink
          SLACK_MESSAGE=$(echo "*Ny versjon av pensjon-regler-api: <https://github.com/${{ github.repository }}/releases/tag/${{ env.TAG_NAME }}|${{ env.TAG_NAME }}>*\n${RELEASE_NOTES}" | sed 's/\\n/\n/g')

          # Escape the Slack message for JSON
          PAYLOAD=$(jq -n --arg text "$SLACK_MESSAGE" '{"text": $text}')

          # Send the message to Slack via webhook
          curl -X POST -H 'Content-type: application/json' \
            --data "$PAYLOAD" \
            ${{ secrets.SLACK_WEBHOOK_URL }}


